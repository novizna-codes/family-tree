name: Build and Push Docker Images to GHCR

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target environment"
        required: true
        default: "production"
        type: choice
        options: [production, staging]
      push_images:
        description: "Push images to registry"
        required: true
        default: true
        type: boolean

env:
  REGISTRY: ghcr.io
  # Update these to your final image paths (keep lowercase).
  IMAGE_BACKEND: ghcr.io/novizna-public/family-tree/backend
  IMAGE_FRONTEND: ghcr.io/novizna-public/family-tree/frontend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Normalize image names to lowercase (just in case)
        run: |
          echo "IMAGE_BACKEND_LC=${IMAGE_BACKEND,,}" >> $GITHUB_ENV
          echo "IMAGE_FRONTEND_LC=${IMAGE_FRONTEND,,}" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry (destination org)
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # VERY IMPORTANT: Username must be the owner of GHCR_TOKEN (PAT owner)
          username: ${{ secrets.GHCR_USER }}
          password: ${{ secrets.GHCR_TOKEN }}

      # ---------- BACKEND ----------
      - name: Extract metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_BACKEND_LC }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.title=Family Tree Backend
            org.opencontainers.image.description=Laravel backend for Family Tree Builder
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          target: production
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (inputs.push_images != false) }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            APP_ENV=${{ inputs.environment }}

      # ---------- FRONTEND ----------
      - name: Extract metadata for Frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_FRONTEND_LC }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
          labels: |
            org.opencontainers.image.title=Family Tree Frontend
            org.opencontainers.image.description=React frontend for Family Tree Builder
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          target: production
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && (inputs.push_images != false) }}
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            APP_ENV=${{ inputs.environment }}

      - name: Summary
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          echo "## ðŸš€ Docker Images Built Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Backend**: \`${{ env.IMAGE_BACKEND_LC }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Frontend**: \`${{ env.IMAGE_FRONTEND_LC }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Registry**: \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Source Repo**: \`${{ github.repository }}\`" >> $GITHUB_STEP_SUMMARY
